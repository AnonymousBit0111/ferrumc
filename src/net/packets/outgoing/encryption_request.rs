use ferrumc_codec::network_types::varint::VarInt;

use ferrumc_macros::NetEncode;

// Packet sent from server to client requesting initialization of encryption
#[derive(NetEncode)]
pub struct EncryptionRequest {
    #[encode(default = VarInt::from(0x01))]
    pub packet_id: VarInt,
    pub server_id: String; //should be empty but needs to be in the packet
    pub public_key_length: VarInt; //length of the public key
    pub public_key: [u8; 128]; // 1024-bit public key, in bytes
    pub verify_token_length: VarInt; //length of the verify token. 4 for notchian and our implementation, anything more is a waste of time imo
    pub verify_token: [u8; 4]; //verify token--random bytes generated by server to verify encryption
}

